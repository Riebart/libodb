#!/bin/sh

# MPL2.0 HEADER START
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# MPL2.0 HEADER END
#
# Copyright 2010-2012 Michael Himbeault and Travis Friesen
#

# This script is designed to test the output of a program on stdout and stderr
# by using sha256sum to compare the output of the current run with the hash of
# the expected ouptut.

usage()
{
    echo "Usage: test-output <stdout hash> <stderr hash> <command> <args>"
    echo "  The script takes in either one or two hashes produced by sha256sum as well"
    echo "  as the command and the arguments to pass to the command."
    echo ""
    echo "  If a hash is the empty string, then the 'test' for that stream succeeds"
    echo "  by default."
    echo ""
    echo "  Temporary folders generated by hashing the output of date are used for"
    echo "  output storage. The folder is left if an error is encountered so that"
    echo "  the output may be analyzed to determine the problem."
}

if [ $# -lt 3 ]; then
    usage
    exit 1
fi

hash1_proto=$1
hash2_proto=$2
com=$3
args=""

if [ $# -gt 3 ]; then
    args=$4
fi

subdir=$(date +%s.%N)
subdir="$com-$subdir"
mkdir -p "$subdir"

$com $args >"$subdir/stdout" 2>"$subdir/stderr"

success="true"

hash1=$(cat "$subdir/stdout" | sha256sum | cut -f1 -d' ')
hash2=$(cat "$subdir/stderr" | sha256sum | cut -f1 -d' ')

echo "stdout: $hash1"
echo "stderr: $hash2"

if [ "$hash1_proto" == "" ] || [ "$hash1_proto" == "$hash1" ]; then
    rm "$subdir/stdout"
else
    success="false"
    echo "Verification of stdout failed." >&2
fi

if [ "$hash2_proto" == "" ] || [ "$hash2_proto" == "$hash2" ]; then
    rm "$subdir/stderr"
else
    success="false"
    echo "Verification of stderr failed." >&2
fi

if [ $success == "true" ]; then
    rm -r $subdir
    exit 0
else
    exit 2
fi

